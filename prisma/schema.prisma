generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Ingredient {
  id                     String                @id @default(uuid())
  name                   String                @unique @db.VarChar
  category               String?
  description            String?
  price                  Decimal               @db.Decimal(6, 3)
  protein                Decimal               @db.Decimal(4, 3)
  fats                   Decimal               @db.Decimal(4, 3)
  carbs                  Decimal               @db.Decimal(4, 3)
  unit                   String
  created_at             DateTime              @default(now()) @db.Timestamptz(3)
  updated_at             DateTime              @updatedAt @db.Timestamptz(3)
  components_ingredients ComponentIngredient[]

  @@map("ingredients")
}

model Component {
  id                     String                @id @default(uuid())
  name                   String                @unique @db.VarChar
  category               String?
  description            String?
  unit                   String
  created_at             DateTime              @default(now()) @db.Timestamptz(3)
  updated_at             DateTime              @updatedAt @db.Timestamptz(3)
  components_ingredients ComponentIngredient[]
  meals_components       MealComponent[]

  @@map("components")
}

model Meal {
  id               String          @id @default(uuid())
  name             String          @unique @db.VarChar
  description      String?
  size             String
  unit             String
  created_at       DateTime        @default(now()) @db.Timestamptz(3)
  updated_at       DateTime        @updatedAt @db.Timestamptz(3)
  meals_components MealComponent[]

  @@map("meals")
}

model ComponentIngredient {
  id                  String     @id @default(uuid())
  components          Component  @relation(fields: [component_id], references: [id])
  ingredients         Ingredient @relation(fields: [ingredient_id], references: [id])
  component_id        String
  ingredient_id       String
  ingredient_quantity Int
  created_at          DateTime   @default(now()) @db.Timestamptz(3)
  updated_at          DateTime   @updatedAt @db.Timestamptz(3)

  @@map("components_ingredients")
}

model MealComponent {
  id                 String    @id @default(uuid())
  meals              Meal      @relation(fields: [meal_id], references: [id])
  components         Component @relation(fields: [component_id], references: [id])
  meal_id            String
  component_id       String
  component_quantity Int
  created_at         DateTime  @default(now()) @db.Timestamptz(3)
  updated_at         DateTime  @updatedAt @db.Timestamptz(3)

  @@map("meals_components")
}
